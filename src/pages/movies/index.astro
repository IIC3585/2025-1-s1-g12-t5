---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../consts";
import { getCollection } from "astro:content";
import '../../styles/blog.css';
import { ComboboxDemo } from "@/components/react/combobox"; // => Isla con react
import MovieSummary from "../../components/svelte/MovieSummary.svelte" // Isla con svelte


const movies = (await getCollection("movies")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const moviesForCombobox = movies.map(movie => ({
  id: movie.id,
  title: movie.data.title,
  year: movie.data.year,
  director: movie.data.director
}));

async function getBackdropImage(tmdbURL: string | undefined) {
  if (!tmdbURL) return null;
  const movieId = tmdbURL.split("/").pop();
  if (!movieId) return null;

  const apiURL = `https://api.themoviedb.org/3/movie/${movieId}/images`;

  const response = await fetch(apiURL, {
    headers: {
      Authorization: `Bearer ${import.meta.env.PUBLIC_TMDB_API_KEY}`,
      "Content-Type": "application/json",
    },
  });

  if (response.ok) {
    const data = await response.json();
    if (data.backdrops && data.backdrops.length > 0) {
      return `https://image.tmdb.org/t/p/w1280${data.backdrops[0].file_path}`;
    }
  }
  return null;
}
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <main>
      <div class="search-section">
        <ComboboxDemo
          movies={moviesForCombobox}
          client:load
        />
      </div>
      <section>
        <ul>
          {
            movies.map(async (movie) => {
              const hasTmdbURL = !!movie.data.tmdbURL;
              const imageUrl = hasTmdbURL
                ? await getBackdropImage(movie.data.tmdbURL)
                : null;
              return (
                <li>
                  <MovieSummary
                    movieId={movie.id}
                    movie={movie.data}
                    imageUrl={imageUrl}
                    client:visible
                  />
                </li>
              );
            })
          }
        </ul>
      </section>
    </main>
    <Footer />
  </body>
</html>
